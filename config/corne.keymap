/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&trans>;
            key-positions = <2 3>;
        };

        ctrl {
            bindings = <&kp LCTRL>;
            key-positions = <26 27>;
        };

        cmd {
            bindings = <&kp LCMD>;
            key-positions = <37 38>;
        };

        alt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <39 40>;
        };

        shift {
            bindings = <&kp LSHIFT>;
            key-positions = <8 9>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <17 18>;
        };

        delete {
            bindings = <&kp DEL>;
            key-positions = <32 33>;
        };
    };

    macros {
        zed_em_kay: zed_em_kay {
            compatible = "zmk,behavior-macro";
            label = "ZM_zed_em_kay";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp Z &kp M &kp K>,
                <&macro_release>,
                <&kp LSHFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
   &kp ESC   &kp Q   &kp W         &kp E             &kp R   &kp T           &kp Y      &kp U            &kp I    &kp O          &kp P    &kp BACKSPACE
   &kp TAB   &kp A   &kp S         &kp D             &kp F   &kp G           &kp H      &kp J            &kp K    &kp L  &kp SEMICOLON        &kp ENTER
 &kp LSHFT   &kp Z   &kp X         &kp C             &kp V   &kp B           &kp N      &kp M        &kp COMMA  &kp DOT       &kp FSLH  &kp RIGHT_SHIFT
                            &kp LEFT_ALT  &kp LEFT_CONTROL   &mo 1           &mo 2  &kp SPACE  &kp RIGHT_SHIFT
            >;
        };

        directions_and_symbols {
            bindings = <
     &kp ESCAPE      &kp PAGE_UP        &kp HOME    &kp UP_ARROW           &kp END  &kp PERCENT                  &kp CARET   &kp AMPERSAND     &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS       &kp DELETE
        &kp TAB    &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW   &kp RIGHT_ARROW    &kp GRAVE           &kp SINGLE_QUOTE        &kp PIPE        &kp EQUAL      &kp LEFT_BRACKET      &kp RIGHT_BRACKET        &kp ENTER
 &kp LEFT_SHIFT  &kp EXCLAMATION     &kp AT_SIGN        &kp HASH        &kp DOLLAR    &kp TILDE          &kp DOUBLE_QUOTES   &kp BACKSLASH         &kp PLUS        &kp LEFT_BRACE        &kp RIGHT_BRACE  &kp RIGHT_SHIFT
                                                    &kp LEFT_ALT  &kp LEFT_CONTROL       &trans                      &mo 3  &kp UNDERSCORE  &kp RIGHT_SHIFT
            >;
        };

        Numbers_and_functions {
            bindings = <
        &kp ESC  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3      &kp NUMBER_4       &kp NUMBER_5          &kp NUMBER_6  &kp NUMBER_7     &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0          &kp DEL
        &kp TAB        &kp F1        &kp F2        &kp F3            &kp F4   &kp SINGLE_QUOTE             &kp MINUS  &kp NUMBER_4     &kp NUMBER_5  &kp NUMBER_6       &kp DOT        &kp ENTER
 &kp LEFT_SHIFT        &kp F5        &kp F6        &kp F7            &kp F8  &kp DOUBLE_QUOTES             &kp UNDER  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_0  &kp RIGHT_SHIFT
                                             &kp LEFT_ALT  &kp LEFT_CONTROL              &mo 3                &trans         &none  &kp RIGHT_SHIFT
            >;
        };

        Mouse_and_movements {
            bindings = <
  &mo 4  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI    &rgb_ug RGB_SPI   &rgb_ug RGB_EFF               &none       &none   &none   &none   &none   &none
  &none  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD    &rgb_ug RGB_SPD   &rgb_ug RGB_EFR          &bl BL_DEC  &bl BL_INC   &none   &none   &none   &none
  &none  &rgb_ug RGB_TOG            &none            &none  &ext_power EP_OFF  &ext_power EP_ON          &bl BL_OFF   &bl BL_ON   &none   &none   &none   &none
                                                    &trans             &trans            &trans              &trans      &trans  &trans
            >;
        };

        debug {
            bindings = <
 &trans       &reset  &trans  &trans  &trans  &trans            &bt BT_CLR        &trans      &trans  &trans       &reset  &trans
 &trans       &trans  &trans  &trans  &trans  &trans          &bt BT_SEL 0    &bt BT_PRV  &bt BT_NXT  &trans       &trans  &trans
 &trans  &bootloader  &trans  &trans  &trans  &trans          &out OUT_BLE  &out OUT_USB      &trans  &trans  &bootloader  &trans
                              &trans  &trans  &trans                &trans        &trans      &trans
            >;
        };
    };
};
