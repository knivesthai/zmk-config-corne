/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&trans>;
            key-positions = <2 3>;
        };

        ctrl {
            bindings = <&kp LCTRL>;
            key-positions = <26 27>;
        };

        cmd {
            bindings = <&kp LCMD>;
            key-positions = <37 38>;
        };

        alt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <39 40>;
        };

        shift {
            bindings = <&kp LSHIFT>;
            key-positions = <8 9>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <17 18>;
        };

        delete {
            bindings = <&kp DEL>;
            key-positions = <32 33>;
        };
    };

    macros {
        zed_em_kay: zed_em_kay {
            compatible = "zmk,behavior-macro";
            label = "ZM_zed_em_kay";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp Z &kp M &kp K>,
                <&macro_release>,
                <&kp LSHFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
   &kp ESC   &kp Q   &kp W         &kp E             &kp R   &kp T           &kp Y      &kp U         &kp I    &kp O          &kp P    &kp BACKSPACE
   &kp TAB   &kp A   &kp S         &kp D             &kp F   &kp G           &kp H      &kp J         &kp K    &kp L  &kp SEMICOLON        &kp ENTER
 &kp LSHFT   &kp Z   &kp X         &kp C             &kp V   &kp B           &kp N      &kp M     &kp COMMA  &kp DOT       &kp FSLH  &kp RIGHT_SHIFT
                            &kp LEFT_ALT  &kp LEFT_CONTROL   &mo 1           &mo 2  &kp SPACE  &kp LEFT_GUI
            >;
        };

        directions_and_symbols {
            bindings = <
     &kp ESCAPE      &kp PAGE_UP        &kp HOME    &kp UP_ARROW           &kp END  &kp PERCENT                  &kp CARET   &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS       &kp DELETE
        &kp TAB    &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW   &kp RIGHT_ARROW    &kp GRAVE           &kp SINGLE_QUOTE        &kp PIPE     &kp EQUAL      &kp LEFT_BRACKET      &kp RIGHT_BRACKET        &kp ENTER
 &kp LEFT_SHIFT  &kp EXCLAMATION     &kp AT_SIGN        &kp HASH        &kp DOLLAR    &kp TILDE          &kp DOUBLE_QUOTES   &kp BACKSLASH      &kp PLUS        &kp LEFT_BRACE        &kp RIGHT_BRACE  &kp RIGHT_SHIFT
                                                    &kp LEFT_ALT  &kp LEFT_CONTROL       &trans                      &mo 3  &kp UNDERSCORE         &none
            >;
        };

        Numbers_and_functions {
            bindings = <
    &kp  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT          &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR     &trans
 &trans    &trans  &trans    &trans    &trans     &trans          &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
 &trans    &trans  &trans    &trans    &trans     &trans          &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                             &trans    &trans     &trans             &trans     &trans           &trans
            >;
        };

        Mouse_and_movements {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                         &trans  &trans  &trans          &trans  &trans  &trans
            >;
        };
    };
};
